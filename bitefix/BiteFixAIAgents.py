from crewai import Agent
from typing import Any, Tuple


class BiteFixAIAgents:

    """
    This class is responsible for creating the agents for the BiteFixAI task.
    Each agent is responsible for a specific task involved in the process of fixing the error in the decorated python function.

    Attributes:
        function_code (str): The function code.
        arguments (Tuple[Any, ...]): The arguments passed to the function.
        error_message (str): The error message.
        llm (object): The LLM object.

    Methods:
        DiagnosisAgent: Returns a Python code Diagnosis agent responsible for explaining why the error occurred.
        IdeaGeneratorAgent: Returns a senior Python code expert agent responsible for generating ideas to fix the error.
        IdeasEvaluatorAgent: Returns a lead Python code expert agent responsible for evaluating and choosing the best idea to fix the error.
        CodeDeveloperAgent: Returns a Python code Developer agent responsible for writing the final fixed code based on the chosen idea.
    """

    def __init__(
        self,
        function_code: str,
        arguments: Tuple[Any, ...],
        error_message: str,
        llm: object,
    ):
        self.function_code = function_code
        self.arguments = arguments
        self.error_message = error_message
        self.llm = llm

    def DiagnosisAgent(self) -> Agent:
        return Agent(
            role="Python code Diagnosis Expert",
            goal="Go through the error message and code and explain why the error occurred",
            backstory=f"""You are an expert in diagnosing python code errors. Your code diagnosis skills are unmatched. 
            It is said that you can diagnose any python code error in less than a minute. 
            Your job is to go through the function code, arguments passed, and error message and explain why the error occurred. 
            Please note that don't write code, just explain why the error occurred. Just stay in the role of a Python code diagnosis expert. 
            Explain the error in easy human language.""",
            allow_delegation=False,
            llm=self.llm,
            verbose=True,
        )

    def IdeaGeneratorAgent(self) -> Agent:
        return Agent(
            role="Senior Python code expert",
            goal="Generate ideas on how to fix the error",
            backstory=f"""You are an expert in generating ideas on how to fix the error. 
            Your job is to go through the diagnosis of the error and generate ideas on how to fix the error. 
            You should think of all possible ideas on how to fix the error and explain each of them.
            You are a senior python code expert. 
            You have been suggesting python code fix errors for more than 10 years and have handled more than 1000 errors. 
            Generate possible ideas on how to fix the error and explain the ideas in easy human language without writing the code.
            You also think of best practices and efficiency while suggesting the ideas.""",
            allow_delegation=False,
            llm=self.llm,
            verbose=True,
        )

    def IdeasEvaluatorAgent(self) -> Agent:
        return Agent(
            role="Lead Python code expert",
            goal="Evaluate the ideas generated by BugFixIdeaGeneratorAgent and choose the best idea to fix the error",
            backstory=f"""You are an expert in evaluating the error fix ideas choosing the best idea to fix the error.
            Your job is to go through the ideas generated by Senior Python code expert and choose the best idea to fix the error. 
            You are a lead python code expert. 
            You have been leading these bug fixes for more than 20 years and have handled more than 2000 errors. 
            You are an expert in leading these kinds of bug fix tasks. 
            Evaluate the ideas generated by Senior Python code expert and choose the best idea to fix the error. 
            Explain your decision while choosing the best idea without writing the code. 
            You also think of best practices and efficiency while evaluating the ideas. 
            Take a look at the function code, arguments passed, and error message as well if needed.""",
            allow_delegation=False,
            llm=self.llm,
            verbose=True,
        )

    def CodeDeveloperAgent(self) -> Agent:
        return Agent(
            role="Python code developer",
            goal="Write the code to fix the error",
            backstory=f"""You are an expert in writing the code to fix the error. 
            Your job is to rewrite the function code by applying the fix for the error based on the idea chosen by Lead Python code expert. 
            You are an experienced python code developer. 
            Given the idea, you are an expert in going through all your python coding skills and writing the code to fix the error. 
            Explain the code also after writing what you changed.""",
            allow_delegation=False,
            llm=self.llm,
            verbose=True,
        )
